// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // previewFeatures = [ "multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // schemas  = ["users", "forums", "accounts", "sessions"]
}

model User {
  id            String    @id @default(cuid())
  userId        String?
  username      String    @unique
  email         String?   @unique
  emailVerified DateTime?
  userImage     String?
  accounts      Account[]
  sessions      Session[]
  forums         Forum[]

  @@unique([id, username])
  @@map("user")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  //@@("users")
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Forum {
  id             String   @id @default(cuid())
  userId         String
  authorUsername String
  forumImage     String?
  title          String
  caption        String?
  user           User     @relation(fields: [userId, authorUsername], references: [id, username])
  createdAt      DateTime   @default(now())

  @@map("forums")
}
